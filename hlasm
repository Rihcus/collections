def read_continued_input():
    statement = ''
    continuation_indicator = False
    entries_order = ['name', 'operation', 'operand', 'remarks']
    current_entry = 0
    in_quotes = False

    while True:
        line = input().rstrip()  # Read input line and remove trailing whitespace

        if not line:  # Stop if empty line is encountered
            break

        if line[71:].strip():  # Check if continuation indicator field (column 72) is non-empty
            continuation_indicator = True
            statement += line[:71].strip()  # Append characters from the line, excluding the continuation indicator field
        elif continuation_indicator:  # Check if continuation from previous line
            statement += line[15:].strip()  # Append characters starting from continuation column (column 16)
        else:  # If not continued from previous line
            if current_entry < len(entries_order) - 1:
                entry_start = 0 if entries_order[current_entry] == 'name' else 15
                entry_end = 15 if entries_order[current_entry] == 'name' else 71
                entry_value = line[entry_start:entry_end].strip()

                if current_entry == 2:  # Check if operand
                    if 'L\'' in entry_value:  # Check if operand contains 'L\''
                        remarks = entry_value.split('L\'', 1)[1]  # Extract content after 'L\'
                        statement += remarks.strip() + ' '  # Append to remarks
                        current_entry += 1  # Move to remarks entry
                        continue

                    if ' ' in entry_value and entry_value[0] == "'" and entry_value[-1] == "'":  # Check for space enclosed in quotes
                        remarks = entry_value.strip("'")  # Extract content inside quotes
                        statement += remarks + ' '  # Append to remarks
                        current_entry += 1  # Move to remarks entry
                        continue

                statement += entry_value + ' '
                current_entry += 1
            else:
                statement += line.strip()

    return statement


print("Enter your input lines (press Enter twice to finish):")
result = read_continued_input()
print("\nResulting assembled statement:")
print(result)
